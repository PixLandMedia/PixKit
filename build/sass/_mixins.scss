/*==============================
=            Mixins            =
==============================*/

// Custom Font Mixin for easy declaration of customized fonts on elements
@mixin custom-font($color:$default,$font-family:$font-family-primary,$font-size:$font-size,$font-style:normal,$font-weight:$font-weight-text) {
	// Organized alphabetically (color -> weight)
	color: $color;
	font-family: $font-family;
	font-size: $font-size;
	font-style: $font-style;
	font-weight: $font-weight;
}


@mixin background-cover() {
	-moz-background-size:cover; 
	-webkit-background-size:cover; 
	background-size:cover;
}

@mixin border-radius($radius: 5px) { 
	@include border-top-radius($radius);
	@include border-right-radius($radius);
	@include border-bottom-radius($radius);
	@include border-left-radius($radius);
}

@mixin border-radius-whole($radius: 5px) {
    -webkit-background-clip: padding-box;
    -webkit-border-radius: $radius;
    -moz-background-clip: padding-box;
    -moz-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;
}

@mixin box-sizing() { 
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box; 
}

@mixin box-shadow($x:0, $y:5px, $blur:3px, $color: $default) {
  box-shadow: $x $y $blur $color;
  -o-box-shadow: $x $y $blur $color; 
  -webkit-box-shadow: $x $y $blur $color; 
  -moz-box-shadow: $x $y $blur $color;
}

@mixin centered($width: 1020px) { 
	margin: 0 auto 0 auto;	
	width: $width;
}

@mixin circle($size:20px) {
	@include border-radius-whole(50%);
	display: inline-block;
	height: $size;
	width: $size;
	text-align: center;
}

@mixin debug($color: $msg-info) { 
	background: $color;
}

@mixin divider($color: $default) { 
	border-top: 1px solid $color;
	clear: both;
}

@mixin gradient-horizontal($from, $to) {
	background-color: $from;
	background-repeat: repeat-x;
	background: -webkit-gradient(linear, 0% 0%, 100% 0%, from($from), to($to));
	background: -webkit-linear-gradient(left top, $from, to);
	background: -moz-linear-gradient(left top, $from, $to);
	background: -ms-linear-gradient(left top, $from, $to);
	background: -o-linear-gradient(left top, $from, $to);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=$from, endColorstr=$to, GradientType=1);
	-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=$from, endColorstr=$to, GradientType=1)";	
}

@mixin gradient-vertical($from,$to) {
	background-color: $from;
	background-repeat: repeat-x;
	background: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from), to($to));
	background: -webkit-linear-gradient(top, $from, to);
	background: -moz-linear-gradient(top, $from, $to);
	background: -ms-linear-gradient(top, $from, $to);
	background: -o-linear-gradient(top, $from, $to);
	-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=$from, endColorstr=$to)";	
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=$from, endColorstr=$to);
}

@mixin inset-shadow($x:0, $y:2px, $blur:5px, $spread:-2px, $color:$default) { 
	-moz-box-shadow:inset $x $y $blur $spread $color;
	-webkit-box-shadow:inset $x $y $blur $spread $color;
	box-shadow:inset $x $y $blur $spread $color;
}

@mixin text-shadow($h:0.1em, $v:0.1em, $blur:0, $color:$default) {
	text-shadow: $h $v $blur $color;
}

@mixin transform($deg:-90deg) { 
	-webkit-transform: rotate($deg);
	-moz-transform: rotate($deg);
	-ms-transform: rotate($deg);
	-o-transform: rotate($deg);
}

@mixin transition($seconds:0.4s) { 
	-moz-transition: $seconds ease;
	-ms-transition: $seconds ease;
	-o-transition:$seconds ease;
	transition: $seconds ease;
	-webkit-transition: $seconds ease;	
}

@mixin translateY($trans-y: $default-translate-y, $perspective: false, $only3d: false) {
  $trans: translateY($trans-y);
  @if $perspective {
    $trans: perspective($perspective) $trans;
  }
  @include transform($trans);
}

@mixin transparent($op: 0.5, $ieop: 50) {
	filter: alpha(opacity=$ieop);
	-moz-opacity:$op;
	-khtml-opacity: $op;
	opacity: $op;
	-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=$ieop)";	
}

@mixin opacity($opacity: 1.0) {
	@include transparent( $opacity, $opacity * 100 );
}



// image, container aspect ratio
@mixin px-canvas-ratio($padding-bottom) {
	padding-bottom:$padding-bottom;
    width: 100%;
    height: 0;
    overflow:hidden;
}
/*-----  End of Mixins  ------*/